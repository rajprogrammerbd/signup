{"version":3,"sources":["components/form.jsx","serviceWorker.js","index.js"],"names":["Form","state","firstName","lastName","email","password","emailError","divMessage","error","show","success","successBack","setState","errorBack","changeFirstName","element","target","value","changeLastName","changeEmailAddress","changePassword","validateSubmit","focusOut","trim","axios","post","then","result","data","status","window","alert","catch","err","console","log","formSubmit","e","preventDefault","className","this","htmlFor","type","onChange","id","placeholder","onBlur","onClick","disabled","style","backgroundColor","Component","Error","props","Success","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.de3124a9.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport \"./../form.scss\";\r\nimport axios from 'axios';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        emailError: false,\r\n        divMessage: { error: { show: false }, success: { show: false } }\r\n    }\r\n\r\n    successBack = () => {\r\n        this.setState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\", divMessage: { error: { show: false }, success: { show: false } } });\r\n    }\r\n\r\n    errorBack = () => {\r\n        this.setState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\", divMessage: { error: { show: false }, success: { show: false } } });\r\n    }\r\n\r\n    changeFirstName = element => {\r\n        if ( element.target.value === \"\" ) {\r\n            this.setState({ firstName: element.target.value, error: true });\r\n        } else {\r\n            this.setState({ firstName: element.target.value, error: false });\r\n        }\r\n    }\r\n\r\n    changeLastName = element => {\r\n        if ( element.target.value === \"\" ) {\r\n            this.setState({ lastName: element.target.value, error: true });\r\n        } else {\r\n            this.setState({ lastName: element.target.value, error: false });\r\n        }\r\n    }\r\n\r\n    changeEmailAddress = element => {\r\n        if ( element.target.value === \"\" ) {\r\n            this.setState({ email: element.target.value, error: true });\r\n        } else {\r\n            this.setState({ email: element.target.value, error: false });\r\n        }\r\n    }\r\n\r\n    changePassword = element => {\r\n        if ( element.target.value === \"\" ) {\r\n            this.setState({ password: element.target.value, error: true });\r\n        } else {\r\n            this.setState({ password: element.target.value, error: false });\r\n        }\r\n    }\r\n\r\n    validateSubmit = () => {\r\n        const { firstName, lastName, email, password } = this.state;\r\n        if ( !(firstName === \"\") && !(lastName === \"\") && !(email === \"\") && !(password === \"\") ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    focusOut = () => {\r\n        if ( this.state.email.trim() === \"\" ) {\r\n\r\n        } else {\r\n            axios.post('https://api.raisely.com/v3/check-user', {\r\n                \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\r\n                \"data\": {\r\n                    \"email\": this.state.email\r\n                }\r\n            }).then(result => {\r\n                if ( result.data.data.status === \"OK\" ) {\r\n                    this.setState({ emailError: true });\r\n                } else if ( result.data.data.status === \"EXISTS\" ) {\r\n                    window.alert(\"choose a new email address\");\r\n                    this.setState({ emailError: false });\r\n                }\r\n            }).catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    formSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        axios.post(\"https://api.raisely.com/v3/signup\", {\r\n            \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\r\n            \"data\": {\r\n                \"email\": this.state.email,\r\n                \"firstName\": this.state.firstName,\r\n                \"lastName\": this.state.lastName,\r\n                \"password\": this.state.password\r\n            }\r\n        }).then(result => {\r\n            const { data } = result;\r\n            if (data.data.status === \"ACTIVE\") {\r\n                this.setState({ divMessage: { error: { show: false }, success: { show: true } } });\r\n            }\r\n        }).catch(err => {\r\n            this.setState({ divMessage: { error: { show: true }, success: { show: false } } });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <h2 className=\"headding-text\">Signup:</h2>\r\n                    { (this.state.divMessage.error.show) ? <Error errorBack={this.errorBack} /> : null }\r\n                    { (this.state.divMessage.success.show) ? <Success successBack={this.successBack} /> : null }\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"#firstName\">First Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={this.changeFirstName} value={this.state.firstName} id=\"firstName\" placeholder=\"Enter your first name\" />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"#lastName\">Last Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"lastName\" onChange={this.changeLastName} value={this.state.lastName} placeholder=\"Enter your last name\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"#emails\">Email Address:</label>\r\n                            <input type=\"email\" onBlur={this.focusOut} id=\"emails\" className=\"form-control\" onChange={this.changeEmailAddress} value={this.state.email} placeholder=\"Enter Your Email Address\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"#passwords\">Password:</label>\r\n                            <input type=\"password\" id=\"passwords\" className=\"form-control\" onChange={this.changePassword} value={this.state.password} placeholder=\"Enter your password\"/>\r\n                        </div>\r\n\r\n                        { (this.validateSubmit() && this.state.emailError ) ? <input type=\"submit\" className=\"form-submit\" onClick={this.formSubmit} value=\"SUBMIT\" /> : <input type=\"submit\" className=\"form-submit\" disabled style={{ backgroundColor: \"#08aadaa1\" }} value=\"SUBMIT\" /> }\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\nclass Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"error-message\">\r\n                    <h2 className=\"message\">This email address has already been registered</h2>\r\n                    <button onClick={this.props.errorBack}>BACK</button>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass Success extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"success-message\">\r\n                    <h2 className=\"message\">Data is Successfully Added</h2>\r\n                    <button onClick={this.props.successBack}>BACK</button>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from \"./components/form\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Form />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}